/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.barbara.visao;

import Util.HibernateUtil;
import br.com.barbara.Classes.Clientes;
import br.com.barbara.Classes.Parcela;
import br.com.barbara.Classes.Recibovenda;
import br.com.barbara.Classes.Saidas;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.Transaction;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
/**
 *
 * @author anton
 */
public class Parcelamentos extends javax.swing.JDialog {
private  DefaultTableModel tmResultSet = new DefaultTableModel(null, new String[]{"NUM VENDA","DATA","PRODUTO", "STATUS"});;
private  DefaultTableModel tmResultSet2 = new DefaultTableModel(null, new String[]{"NUM DA VENDA","NUMERO DA PARCELA","VALOR", "STATUS","ID PARCELA"});;
   
java.util.List<Clientes> resultado; 
java.util.List<Recibovenda> resultado2; 
      private ListSelectionModel lsmResult;
      private ListSelectionModel lsmResult2;
      private DefaultTableModel tabela;
      private DefaultTableModel tabela2;
      // NUMEROS PARA ATUALIZAÇÃO DE STATUS DAS PARCELAS
      int numVenda;
      int numParcela;
      float valorParcela;
      int statusPagamento;
      int idClienteTb;
      int idParcela;
      //nnnn
      int numPar;
      float valoraPagar;
    /**
     * Creates new form Parcelamentos
     */
    public Parcelamentos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
         URL url = this.getClass().getResource("/sisbarbara/icone site.fw.png");
Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
this.setIconImage(imagemTitulo);
        initComponents();
        //recebe();
    }

    Parcelamentos() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLnome = new javax.swing.JLabel();
        jLid = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLvalor = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLnumVenda = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GERENCIA DE PARCELAS - SCE - TEC.INOVA");

        jPanel1.setBackground(new java.awt.Color(254, 131, 159));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CUPONS EM ABERTO:");

        jTable1.setModel(tmResultSet);
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);          lsmResult = jTable1.getSelectionModel();          lsmResult.addListSelectionListener(new ListSelectionListener() {               public void valueChanged(ListSelectionEvent e) {                                        if (! e.getValueIsAdjusting()){                           jTTabelaLinhaSelecionada(jTable1);                       }                                    }          });
        jScrollPane1.setViewportView(jTable1);

        jLnome.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLnome.setForeground(new java.awt.Color(255, 255, 255));
        jLnome.setText("NOME CLIENTE");

        jLid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLid.setForeground(new java.awt.Color(255, 255, 255));
        jLid.setText("IDCLIENTE");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("VALOR EM ABERTO");

        jLvalor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLvalor.setForeground(new java.awt.Color(255, 255, 255));
        jLvalor.setText("VALOR");

        jTable2.setModel(tmResultSet2);
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);          lsmResult2 = jTable2.getSelectionModel();          lsmResult2.addListSelectionListener(new ListSelectionListener() {               public void valueChanged(ListSelectionEvent e) {                                        if (! e.getValueIsAdjusting()){                           jTTabelaLinhaSelecionada2(jTable2);                       }                                    }          });
        jScrollPane2.setViewportView(jTable2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PARCELAS");

        jButton1.setText("QUITAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLnumVenda.setText("jLabel3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLnome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLid)
                        .addGap(90, 90, 90))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLvalor)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLnumVenda))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jButton1))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLnome)
                    .addComponent(jLid))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLvalor))
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLnumVenda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(626, 564));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        pagamentoParcela();
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Parcelamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Parcelamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Parcelamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Parcelamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Parcelamentos dialog = new Parcelamentos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLid;
    private javax.swing.JLabel jLnome;
    private javax.swing.JLabel jLnumVenda;
    private javax.swing.JLabel jLvalor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables

public void recebe(int id, String nome){
    
    
    jLnome.setText(nome);//pega nome do cliente e seta
    jLid.setText(String.valueOf(id));//pega id do cliente e seta
    
    cupons(id);
}

    private void cupons(int id) {
        tabela = (DefaultTableModel)jTable1.getModel();
        tabela.setNumRows(0);
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
       // Criteria crit = sesion.createCriteria(Clientes.class);
        Criteria crit2 = sesion.createCriteria(Recibovenda.class);
        Criteria crit = sesion.createCriteria(Saidas.class);
        java.util.List results2 = crit2.list();
        java.util.List results = crit.list();
        int idvenda =0;
        for (Iterator iterator2 = results2.iterator(); iterator2.hasNext();){
             br.com.barbara.Classes.Recibovenda Sal2 = (br.com.barbara.Classes.Recibovenda) iterator2.next(); 
             if(id == Sal2.getIdcliente()){
                 idvenda = Sal2.getIdvenda();
                 for (Iterator iterator = results.iterator(); iterator.hasNext();){
                     br.com.barbara.Classes.Saidas Sal = (br.com.barbara.Classes.Saidas)iterator.next(); 
                      if(Sal.getNumvenda() == Sal2.getIdvenda()){
                         if(Sal.getPg()==1){
                          tmResultSet.addRow(new Object[]{
                            Sal2.getIdvenda(),
                            Sal2.getDatavenda(),
                            Sal.getObservacao(),
                            "EM ABERTO"
                 });}}}}}}
private void jTTabelaLinhaSelecionada(JTable tabela1) {
  //  int i = jTable1.getRowCount();
  //  int x = jTable1.getColumnCount();
  
      //passaValorTabelaParcela(Integer.parseInt(jTable1.getModel().getValueAt(1,0).toString()));
  int num =  jTable1.getSelectedRow(); //retorna um inteiro
  jLnumVenda.setText(jTable1.getModel().getValueAt(num,0).toString());
  passaValorTabelaParcela();
  System.out.println(String.valueOf(num+"" + jTable1.getModel().getValueAt(num,0).toString()));
 this.valoraPagar = 0;
 

}
private void passaValorTabelaParcela(){
   int numvenda = Integer.parseInt(jLnumVenda.getText());
    tabela = (DefaultTableModel)jTable2.getModel();
        tabela.setNumRows(0);
     Session sesion = HibernateUtil.getSessionFactory().openSession();
            Transaction tx = null;
          Criteria crit = sesion.createCriteria(Parcela.class);
          java.util.List results = crit.list();
           for (Iterator iterator = results.iterator(); iterator.hasNext();){
                     br.com.barbara.Classes.Parcela par = (br.com.barbara.Classes.Parcela)iterator.next(); 
         if(numvenda == par.getNumvenda()){
            /// JOptionPane.showMessageDialog(rootPane, par.getNumparcela());
            this.valoraPagar = par.getValorparcela()+this.valoraPagar;
              tmResultSet2.addRow(new Object[]{
                    par.getNumvenda(),
                    par.getNumparcela(),
                    par.getValorparcela(),
                    par.getPago(),
                    par.getIdparcela()
            
                });
             
             
        /*  tabela = (DefaultTableModel)jTable2.getModel();
             if (jTable2.getSelectedRow()!= -1) {   
                   tmResultSet2.addRow(new Object[]{
                    par.getNumvenda(),
                    par.getNumparcela(),
                    par.getValorparcela(),
                    par.getPago()
            
                });
            }else{
                  JOptionPane.showMessageDialog(rootPane, "grugui");
             }*/
        }
           
           
           }
          
         jLvalor.setText(String.valueOf(this.valoraPagar));
    }
private void jTTabelaLinhaSelecionada2(JTable tabela2) {
      int num =  jTable2.getSelectedRow(); //retorna um inteiro
      this.numVenda = Integer.parseInt(jTable2.getModel().getValueAt(num,0).toString());
      this.numParcela = Integer.parseInt(jTable2.getModel().getValueAt(num,1).toString());
      this.valorParcela = Float.parseFloat(jTable2.getModel().getValueAt(num, 2).toString());
      this.statusPagamento = Integer.parseInt(jTable2.getModel().getValueAt(num, 3).toString());
      this.idParcela = Integer.parseInt(jTable2.getModel().getValueAt(num, 4).toString());
      
}

public void pagamentoParcela(){
idClienteTb = Integer.parseInt(jLid.getText());    
Session sesion = HibernateUtil.getSessionFactory().openSession();
Transaction tx = null;
Parcela parcela = new Parcela();
parcela.setIdcliente(idClienteTb);
parcela.setIdparcela(idParcela);
parcela.setNumparcela(numParcela);
parcela.setNumvenda(numVenda);
parcela.setValorparcela(valorParcela);
parcela.setPago(1);
        
sesion.beginTransaction();
sesion.update(parcela);
sesion.getTransaction().commit();

verificaStatus();
}
private void verificaStatus(){
    this.numPar=jTable2.getModel().getRowCount();
    
     int numvenda = Integer.parseInt(jLnumVenda.getText());
     Session sesion = HibernateUtil.getSessionFactory().openSession();
            Transaction tx = null;
          Criteria crit = sesion.createCriteria(Parcela.class);
          java.util.List results = crit.list();
           for (Iterator iterator = results.iterator(); iterator.hasNext();){
                     br.com.barbara.Classes.Parcela par = (br.com.barbara.Classes.Parcela)iterator.next(); 
         if(numvenda == par.getNumvenda()){
             if(par.getPago() == 1){
                 this.numPar = this.numPar -1;
                 System.out.println(this.numPar);
             }
         }
           }
         if(this.numPar == 0){
        int idSaida = 0;
        int idProduto = 0;
        float quantidade = 0;
        float preco = 0;
        int idCLiente = 0;
        String data = null;
        String pagamento = null;
        String observação = null;
        int pg = 0;
        int numvenda2;
         
              // Criteria crit = sesion.createCriteria(Clientes.class);
              Session sesion2 = HibernateUtil.getSessionFactory().openSession();
            Transaction tx2 = null;
        Criteria crit2 = sesion2.createCriteria(Saidas.class);
        java.util.List results2 = crit2.list();
        for (Iterator iterator2 = results2.iterator(); iterator2.hasNext();){
             br.com.barbara.Classes.Saidas Sal2 = (br.com.barbara.Classes.Saidas) iterator2.next(); 
                if(Sal2.getNumvenda()==numvenda){
                   idSaida = Sal2.getIdSaidas();
        idProduto = Sal2.getIdProduto();
         quantidade = Sal2.getQuantidade();
         preco = Sal2.getPreco();
         idCLiente = Sal2.getIdCliente();
         data = Sal2.getData();
         pagamento = Sal2.getPagamento();
         observação = Sal2.getObservacao();
         pg = Sal2.getPg();
         numvenda2 = Sal2.getNumvenda();
         System.out.println(Sal2.getIdSaidas());
         System.out.println(idSaida);
                }else{
                    System.out.println(idSaida);
                }
        
        
        }
        
Saidas saidas = new Saidas();
saidas.setIdCliente(idCLiente);
saidas.setIdProduto(idProduto);
saidas.setQuantidade(quantidade);
saidas.setPreco(preco);
saidas.setIdSaidas(idSaida);
saidas.setData(data);
saidas.setPagamento(pagamento);
saidas.setObservacao(observação);
saidas.setPg(0);
saidas.setNumvenda(numvenda);

        
sesion.beginTransaction();
sesion.update(saidas);
sesion.getTransaction().commit();
        
         }  
}

}
