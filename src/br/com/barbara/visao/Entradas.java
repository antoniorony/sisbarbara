/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.barbara.visao;

import Util.HibernateUtil;
import br.com.barbara.Classes.Estoque;
import br.com.barbara.Classes.Marca;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Iterator;
import javax.management.StringValueExp;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;
import org.hibernate.sql.JoinType;

/**
 *
 * @author anton
 */
public class Entradas extends javax.swing.JDialog {
private  DefaultTableModel tmResultSet = new DefaultTableModel(null, new String[]{"ID","COD","NOME","QUANT COMPRA", "ITENS/CX", "QUANT ESTOQUE", "VAL. CUSTO", "% PORC.", "VAL. VENDA"});
  private ListSelectionModel lsmResult;
  private DefaultTableModel tabela; 

        int  id;
        String  descricao;                              
        String  unCompra;
        String  unVenda;
        int  fornecedor;
        int  marca;
        //variaveis de controle
        int CONT_ID_PROD;
        int ID_ESTOQUE;
        float QUANT1;
        float QUANTCX;
        float QUANTVENDA;
        float PORCENTAGEM;
        float VALORVENDA;
        float VALORCUSTO;
     /**
     * Creates new form Entradas
     */
    public Entradas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopProdutos = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTProd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTQuant = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTCusto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTPorc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTVVenda = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLCod = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTPesq = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);          lsmResult = jTable1.getSelectionModel();          lsmResult.addListSelectionListener(new ListSelectionListener() {               public void valueChanged(ListSelectionEvent e) {                                        if (! e.getValueIsAdjusting()){                           jTTabelaLinhaSelecionada(jTable1);                       }                                    }          });
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTQuantVenda = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTQuantCX = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ENTRADAS DE PRODUTOS - SCE - TEC.INOVA");

        jPanel1.setBackground(new java.awt.Color(254, 131, 159));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Produto: ");

        jTProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTProdKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Quantidade:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Valor de Custo:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Por%:");

        jTPorc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTPorcKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Valor Venda:");

        jTVVenda.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("COD:");

        jLCod.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLCod.setText("CODIGO");

        jButton1.setText("ADICIONAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("LIMPAR");

        jButton3.setText("PESQUISAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(tmResultSet);
        jScrollPane1.setViewportView(jTable1);

        jButton5.setText("CORRIGIR ENTRADA");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Quantidade Venda:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Quantidade/CX:");

        jTQuantCX.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTQuantCXKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTProd, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLCod))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTPesq, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3)
                                        .addGap(62, 62, 62)
                                        .addComponent(jButton1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTQuant, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTPorc, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTQuantCX, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(jButton2))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTVVenda)
                                            .addComponent(jTQuantVenda))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTCusto, jTPorc, jTQuant, jTVVenda});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLCod))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTPorc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTVVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTQuantVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTQuantCX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jTPesq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(750, 612));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTProdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTProdKeyPressed
  //mostra produtos na hora de adicionar
        if (evt.getKeyCode() == evt.VK_SPACE) {
        jPopProdutos.removeAll();
        jLCod.setText("");
        pesquisaSelecionada(jTProd.getText());
            jTProd.add(jPopProdutos);
            jTProd.setComponentPopupMenu(jPopProdutos);
            try {
                int dotPosition = jTProd.getCaretPosition();
                Rectangle popupLocation = jTProd.modelToView(dotPosition);
                jPopProdutos.show(jTProd, popupLocation.x, popupLocation.y+30);
                jTProd.setFocusable(true);
            } catch (BadLocationException badLocationException) {
                System.out.println("Oops");
            }
          }        

        // TODO add your handling code here:
    }//GEN-LAST:event_jTProdKeyPressed

    private void jTPorcKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPorcKeyPressed
//joga o valor de venda do produto com a porcentagem
if (evt.getKeyCode() == evt.VK_SPACE) {
   float custo;
   float venda;
   float porcent;
    custo = Float.parseFloat(jTCusto.getText());
    porcent = Float.parseFloat(jTPorc.getText());
    venda = custo+(custo*(porcent/100));
    jTVVenda.setText(String.valueOf(venda));
    }
    }//GEN-LAST:event_jTPorcKeyPressed
    private void jTQuantCXKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTQuantCXKeyPressed

        //verificador de quantidade por opção cx ou pct por pc ou un
    if (evt.getKeyCode() == evt.VK_SPACE) {
        float quant;
        float quantVenda;
        float QuantCaixa;
 //isto aqui tem que ser evento separado
    if(unCompra.equalsIgnoreCase("cx")&&unVenda.equalsIgnoreCase("un")){
    quant = Float.parseFloat(jTQuant.getText());
    QuantCaixa = Float.parseFloat(jTQuantCX.getText());
    jTQuantVenda.setText(String.valueOf(quant*QuantCaixa));
    jTQuantVenda.setEnabled(false);
    }else if(unCompra.equalsIgnoreCase("pct")&&unVenda.equalsIgnoreCase("un")){
    quant = Float.parseFloat(jTQuant.getText());
    QuantCaixa = Float.parseFloat(jTQuantCX.getText());
    jTQuantVenda.setText(String.valueOf(quant*QuantCaixa));
    jTQuantVenda.setEnabled(false);
    }else if(unCompra.equalsIgnoreCase("pct")&&unVenda.equalsIgnoreCase("pc")){
    quant = Float.parseFloat(jTQuant.getText());
    QuantCaixa = Float.parseFloat(jTQuantCX.getText());
    jTQuantVenda.setText(String.valueOf(quant*QuantCaixa));
    jTQuantVenda.setEnabled(false);
    }else if(unCompra.equalsIgnoreCase("cx")&&unVenda.equalsIgnoreCase("pc")){
    quant = Float.parseFloat(jTQuant.getText());
    QuantCaixa = Float.parseFloat(jTQuantCX.getText());
    jTQuantVenda.setText(String.valueOf(quant*QuantCaixa)); 
    jTQuantVenda.setEnabled(false);
    }else{
        quant = Float.parseFloat(jTQuant.getText());
        jTQuantCX.setText("1");
        jTQuantCX.setEnabled(false);
        QuantCaixa = Float.parseFloat(jTQuantCX.getText());
      jTQuantVenda.setText(String.valueOf(quant));  
    }
   }

    }//GEN-LAST:event_jTQuantCXKeyPressed
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Session sesionCompare = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        Criteria crit = sesionCompare.createCriteria(br.com.barbara.Classes.Estoque.class);
        java.util.List results = crit.list();
        for (Iterator iterator = results.iterator(); iterator.hasNext();){
        br.com.barbara.Classes.Estoque SalCompare = (br.com.barbara.Classes.Estoque) iterator.next(); 
            if (SalCompare.getIdProduto() == Integer.parseInt(jLCod.getText())) {
                this.CONT_ID_PROD = 1;
                this.ID_ESTOQUE = SalCompare.getIdEstoque();
                this.QUANT1 = SalCompare.getQuantidade();
                this.QUANTCX = SalCompare.getQuantCaixa();
                this.QUANTVENDA = SalCompare.getQuantVenda();
                this.PORCENTAGEM = SalCompare.getPorcentagem();
                this.VALORVENDA = SalCompare.getVenda();
            }else{
                this.CONT_ID_PROD = 0;
            }
        }
if(jTQuant.getText().equals("")){
    JOptionPane.showMessageDialog(null, "CAMPO QUANTIDADE EM BRANCO");
}else if(jTQuantCX.getText().equals("")){
     JOptionPane.showMessageDialog(null, "CAMPO QUANTIDADE/CX EM BRANCO");
}else if(jTPorc.getText().equals("")){
     JOptionPane.showMessageDialog(null, "CAMPO PORCENTAGEM EM BRANCO");
}else if(jTVVenda.getText().equals("")){
     JOptionPane.showMessageDialog(null, "CAMPO VALOR DE VENDA EM BRANCO");
}else if(jTCusto.getText().equals("")){
     JOptionPane.showMessageDialog(null, "CAMPO VALOR DE CUSTO EM BRANCO");
}else{if(this.CONT_ID_PROD == 1){
            atualizarEntrada();
     }else{
            salvarEntrada();
     }
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
if(jTPesq.getText().equalsIgnoreCase("")){
pesquisaNormal();
}else{
    pesquisaFiltro(jTPesq.getText());
}


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

 corrigirEntrada();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entradas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Entradas dialog = new Entradas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLCod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopProdutos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTCusto;
    private javax.swing.JTextField jTPesq;
    private javax.swing.JTextField jTPorc;
    private javax.swing.JTextField jTProd;
    private javax.swing.JTextField jTQuant;
    private javax.swing.JTextField jTQuantCX;
    private javax.swing.JTextField jTQuantVenda;
    private javax.swing.JTextField jTVVenda;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
//pesquisa para o popup da opção de inserção do produto
private void pesquisaSelecionada(String text) {
       Session sesion = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        Criteria crit = sesion.createCriteria(br.com.barbara.Classes.Produtos.class);
        crit.add(Restrictions.like("descricao",text+"%"));
        java.util.List results = crit.list();
        for (Iterator iterator = results.iterator(); iterator.hasNext();){
        br.com.barbara.Classes.Produtos Sal = (br.com.barbara.Classes.Produtos) iterator.next(); 
          JMenuItem item = new JMenuItem(Sal.getDescricao()+","+Sal.getIdProduto()+","+Sal.getUnidadeCompra()+","+ Sal.getUnidadeVenda());
          item.addActionListener(new ActionListener() {
           @Override
            public void actionPerformed(ActionEvent arg0){
             String mods = item.getText();
             String campos[] = mods.split(",");
             jTProd.setText(campos[0]);
             jLCod.setText(campos[1]);
             id = Integer.parseInt(campos[1]);
             unCompra = campos[2];
             unVenda = campos[3];
             if(unCompra.equalsIgnoreCase(unVenda)){
                 jTQuantVenda.enableInputMethods(false);}}});
         jPopProdutos.add(item);
        }
}
    private void salvarEntrada() {
        Estoque entradas = new Estoque();
        entradas.setIdProduto(Integer.parseInt(jLCod.getText()));
        entradas.setQuantidade(Float.parseFloat(jTQuant.getText()));
        entradas.setQuantCaixa(Float.parseFloat(jTQuantCX.getText()));
        entradas.setQuantVenda(Float.parseFloat(jTQuantVenda.getText()));
        entradas.setCusto(Float.parseFloat(jTCusto.getText()));
        entradas.setPorcentagem(Float.parseFloat(jTPorc.getText()));
        entradas.setVenda(Float.parseFloat(jTVVenda.getText()));
        Session s = HibernateUtil.getSessionFactory().openSession();
//        Session s = HibernateUtil.getSessionFactory().getCurrentSession();
        s.beginTransaction();
        s.save(entradas);
        s.getTransaction().commit();
        JOptionPane.showMessageDialog(rootPane, "CADASTRADO COM SUCESSO!");
        limpaCampos();
    }
    private void limpaCampos() {
jLCod.setText(""); jTQuant.setText("");jTQuantCX.setText("");jTProd.setText("");
jTQuantVenda.setText("");jTCusto.setText("");jTPorc.setText("");jTVVenda.setText("");
    }
    private void atualizarEntrada() {
        Estoque entradas = new Estoque();
        entradas.setIdEstoque(this.ID_ESTOQUE);
        entradas.setIdProduto(Integer.parseInt(jLCod.getText()));
        entradas.setQuantidade(Float.parseFloat(jTQuant.getText())+this.QUANT1);//quantidade total de compra deve ser controlada
        entradas.setQuantCaixa(Float.parseFloat(jTQuantCX.getText()));
        entradas.setQuantVenda(Float.parseFloat(jTQuantVenda.getText())+this.QUANTVENDA); // quantidade venda deve ser controlada
        entradas.setCusto(Float.parseFloat(jTCusto.getText()));
        entradas.setPorcentagem(Float.parseFloat(jTPorc.getText()));
        entradas.setVenda(Float.parseFloat(jTVVenda.getText()));
        Session s = HibernateUtil.getSessionFactory().openSession();
       // Session s = HibernateUtil.getSessionFactory().getCurrentSession();
        s.beginTransaction();
        s.update(entradas);
        s.getTransaction().commit();
        JOptionPane.showMessageDialog(rootPane, "ENTRADA DE PRODUTOS COM SUCESSO!");
        limpaCampos();
    }

    private void pesquisaNormal() {
        tabela = (DefaultTableModel)jTable1.getModel();
        tabela.setNumRows(0);
         Session sesionPesquisa = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        Criteria crit = sesionPesquisa.createCriteria(br.com.barbara.Classes.Estoque.class);
        Criteria crit2 = sesionPesquisa.createCriteria(br.com.barbara.Classes.Produtos.class);
       //crit.add(Restrictions.like("descricao",text+"%"));
      //  crit.createCriteria("Estoque", "Produtos", JoinType.INNER_JOIN);
        java.util.List results = crit.list();
        java.util.List results2 = crit2.list();
          
        for (Iterator iterator = results.iterator(); iterator.hasNext();){
        br.com.barbara.Classes.Estoque SalP = (br.com.barbara.Classes.Estoque) iterator.next(); 
        String nomeProd = "";        
        
        for (Iterator iterator2 = results2.iterator(); iterator2.hasNext();){
                br.com.barbara.Classes.Produtos SalP2 = (br.com.barbara.Classes.Produtos) iterator2.next(); 
                 if(SalP.getIdProduto() == SalP2.getIdProduto()){
                   nomeProd = SalP2.getDescricao();
                   
                 }
                }
        tmResultSet.addRow(new Object[]{
            //`enter code here`columns
            SalP.getIdEstoque(),
            SalP.getIdProduto(),
            nomeProd,
            SalP.getQuantidade(),
            SalP.getQuantCaixa(),
            SalP.getQuantVenda(),
            SalP.getCusto(),
            SalP.getPorcentagem(),
            SalP.getVenda()
               
            
            
            
        });
        
        }

    }
    private void jTTabelaLinhaSelecionada(JTable tabela) {
        
           if (jTable1.getSelectedRow()!= -1) {     
          String cod = (jTable1.getValueAt(jTable1.getSelectedRow(),0)).toString();
        this.ID_ESTOQUE = Integer.parseInt(cod) ;    
        String codProd = (jTable1.getValueAt(jTable1.getSelectedRow(),1)).toString();
        this.CONT_ID_PROD = Integer.parseInt(codProd);
        this.descricao = (jTable1.getValueAt(jTable1.getSelectedRow(),2)).toString();
        
        this.QUANT1 = Float.parseFloat((jTable1.getValueAt(jTable1.getSelectedRow(),3)).toString());
        this.QUANTCX = Float.parseFloat((jTable1.getValueAt(jTable1.getSelectedRow(),4)).toString());
        this.QUANTVENDA = Float.parseFloat((jTable1.getValueAt(jTable1.getSelectedRow(),5)).toString());
        this.VALORCUSTO = Float.parseFloat((jTable1.getValueAt(jTable1.getSelectedRow(),6)).toString());
        this.PORCENTAGEM = Float.parseFloat((jTable1.getValueAt(jTable1.getSelectedRow(),7)).toString());
        this.VALORVENDA = Float.parseFloat((jTable1.getValueAt(jTable1.getSelectedRow(),8)).toString());
                   jogaValor();
           }
     }

    private void jogaValor() {
jLCod.setText(String.valueOf(this.CONT_ID_PROD)); jTQuant.setText(String.valueOf(this.QUANT1));jTQuantCX.setText(String.valueOf(this.QUANTCX));
jTQuantVenda.setText(String.valueOf(this.QUANTVENDA));jTCusto.setText(String.valueOf(this.VALORCUSTO));jTPorc.setText(String.valueOf(this.PORCENTAGEM));jTVVenda.setText(String.valueOf(this.VALORVENDA));
jTProd.setText(this.descricao);
    }

    private void corrigirEntrada() {
    int confirma = JOptionPane.showConfirmDialog(rootPane, "Realmente Deseja Corrigir?");
        if(confirma == 0){
        Estoque entradas = new Estoque();
        entradas.setIdEstoque(this.ID_ESTOQUE);
        entradas.setIdProduto(Integer.parseInt(jLCod.getText()));
        entradas.setQuantidade(Float.parseFloat(jTQuant.getText()));//quantidade total de compra deve ser controlada
        entradas.setQuantCaixa(Float.parseFloat(jTQuantCX.getText()));
        entradas.setQuantVenda(Float.parseFloat(jTQuantVenda.getText())); // quantidade venda deve ser controlada
        entradas.setCusto(Float.parseFloat(jTCusto.getText()));
        entradas.setPorcentagem(Float.parseFloat(jTPorc.getText()));
        entradas.setVenda(Float.parseFloat(jTVVenda.getText()));
        Session s = HibernateUtil.getSessionFactory().openSession();
      //  Session s = HibernateUtil.getSessionFactory().getCurrentSession();
        s.beginTransaction();
        s.update(entradas);
        s.getTransaction().commit();
        JOptionPane.showMessageDialog(rootPane, "CORRIGIDO COM SUCESSO!");
        limpaCampos();
        }else{
            
        }
    }

    private void pesquisaFiltro(String text) {
 tabela = (DefaultTableModel)jTable1.getModel();
        tabela.setNumRows(0);
         Session sesionPesquisa = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        Criteria crit = sesionPesquisa.createCriteria(br.com.barbara.Classes.Estoque.class);
        Criteria crit2 = sesionPesquisa.createCriteria(br.com.barbara.Classes.Produtos.class);
        crit2.add(Restrictions.like("descricao",text+"%"));
      
        java.util.List results = crit.list();
        java.util.List results2 = crit2.list();
          
        
        
          for (Iterator iterator2 = results2.iterator(); iterator2.hasNext();){
                br.com.barbara.Classes.Produtos SalP2 = (br.com.barbara.Classes.Produtos) iterator2.next(); 
       
        int codUniao = 0;        
        
       for (Iterator iterator = results.iterator(); iterator.hasNext();){
        br.com.barbara.Classes.Estoque SalP = (br.com.barbara.Classes.Estoque) iterator.next(); 
                 if(SalP.getIdProduto() == SalP2.getIdProduto()){
                   codUniao = SalP.getIdProduto();
                    tmResultSet.addRow(new Object[]{
            //`enter code here`columns
            SalP.getIdEstoque(),
            SalP.getIdProduto(),
            SalP2.getDescricao(),
            SalP.getQuantidade(),
            SalP.getQuantCaixa(),
            SalP.getQuantVenda(),
            SalP.getCusto(),
            SalP.getPorcentagem(),
            SalP.getVenda()
               
            
            
            
        });
                 }
                }
       
        
        }    }

}
