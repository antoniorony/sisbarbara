/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.barbara.visao;

import Util.HibernateUtil;
import br.com.barbara.Classes.Clientes;
import br.com.barbara.Classes.Controleparcela;
import br.com.barbara.Classes.Estoque;
import br.com.barbara.Classes.Saidas;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;
import br.com.barbara.Classes.Parcela;
import br.com.barbara.Classes.Recibovenda;
import java.util.Date;
import org.hibernate.criterion.Order;

/**
 *
 * @author anton
 */
public class GerenciamentoVend extends javax.swing.JDialog {
  private  DefaultTableModel tmResultSet = new DefaultTableModel(null, new String[]{"ID","PRODUTO","QUANTIDADE","VALOR UNITARIO", "TOTAL DO ITEM","ESTOQUE","IDE"});
  private ListSelectionModel lsmResult;
  private DefaultTableModel tabela; 
        int  idProduto;
        String  descricao;                              
        float  valorVenda;
        float  quantidadeEstoque;
        int  fornecedor;
        int  marca;
    
        //variaveis de controle
        float vendaTotal;
        private int pg;
        private String dataComparacao;
        private int numeroVenda;
        
        
        //variaveis de passagem de valor
int numparc;
int numparc2;
int idPTable;
String Produto;
float Quantidade;
float valorUnit;
float totalProduto;
float Qestoque;
int idCliente;
String pagamento;
float valorTotal;
int idEstoque;
    /**
     * Creates new form GerenciamentoVend
     */
    public GerenciamentoVend(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopProdutos = new javax.swing.JPopupMenu();
        jPopupCliente = new javax.swing.JPopupMenu();
        saidaspinel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTProd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTQuantidade = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTVUnidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTTotal = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTCliente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jTVTotalVenda = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLCod = new javax.swing.JLabel();
        jLidCliente = new javax.swing.JLabel();
        estoqueSaida = new javax.swing.JLabel();
        jLidEstoque = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jCParcelas = new javax.swing.JComboBox<>();
        jTValorParcelas = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTValorEntrada = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GERENCIA DE VENDAS - SCE - TEC.INOVA");

        saidaspinel.setBackground(new java.awt.Color(254, 131, 159));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisbarbara/logobarbaramini.jpg"))); // NOI18N

        jTable1.setModel(tmResultSet);
        jScrollPane1.setViewportView(jTable1);

        jTProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTProdKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PRODUTO");

        jTQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTQuantidadeKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("QUANTIDADE");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("VALOR UNITÁRIO");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("TOTAL DO ITEM");

        jButton1.setText("ADICIONAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("CLIENTE:");

        jTCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTClienteKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("TIPO PAGAMENTO ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AVISTA", "APRAZO" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("TOTAL DA VENDA:");

        jButton2.setText("CANCELAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("VENDER");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ID");

        jLidCliente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLidCliente.setForeground(new java.awt.Color(255, 255, 255));
        jLidCliente.setText("ID");

        estoqueSaida.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        estoqueSaida.setText("COD");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("N° Parcelas");

        jCParcelas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        jCParcelas.setEnabled(false);
        jCParcelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCParcelasActionPerformed(evt);
            }
        });

        jTValorParcelas.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("VALOR DE ENTRADA: ");

        jTValorEntrada.setEnabled(false);

        javax.swing.GroupLayout saidaspinelLayout = new javax.swing.GroupLayout(saidaspinel);
        saidaspinel.setLayout(saidaspinelLayout);
        saidaspinelLayout.setHorizontalGroup(
            saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saidaspinelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(saidaspinelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLidCliente))
                    .addComponent(jTCliente)
                    .addComponent(jLabel7)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(saidaspinelLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10))
                    .addGroup(saidaspinelLayout.createSequentialGroup()
                        .addComponent(jTVTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCParcelas, 0, 70, Short.MAX_VALUE)
                            .addComponent(jTValorParcelas)))
                    .addGroup(saidaspinelLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTValorEntrada)))
                .addGap(18, 18, 18)
                .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(saidaspinelLayout.createSequentialGroup()
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(saidaspinelLayout.createSequentialGroup()
                                .addComponent(jTQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTVUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(saidaspinelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel4)))
                        .addGap(51, 51, 51)
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(saidaspinelLayout.createSequentialGroup()
                                .addComponent(jTTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jButton1))))
                    .addGroup(saidaspinelLayout.createSequentialGroup()
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLCod, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(saidaspinelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLidEstoque))
                            .addGroup(saidaspinelLayout.createSequentialGroup()
                                .addComponent(jTProd, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(estoqueSaida))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(saidaspinelLayout.createSequentialGroup()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(saidaspinelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        saidaspinelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton2, jButton3});

        saidaspinelLayout.setVerticalGroup(
            saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saidaspinelLayout.createSequentialGroup()
                .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(saidaspinelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9)
                            .addComponent(jLidEstoque))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTProd)
                                .addComponent(estoqueSaida))
                            .addComponent(jLCod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTQuantidade)
                            .addComponent(jTVUnidade)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTTotal))
                        .addGap(26, 26, 26))
                    .addGroup(saidaspinelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLidCliente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(saidaspinelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTValorEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(saidaspinelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jTValorParcelas)
                                .addGap(11, 11, 11))
                            .addComponent(jTVTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(saidaspinelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(31, 31, 31))
        );

        saidaspinelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton2, jButton3});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saidaspinel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(saidaspinel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(728, 536));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTProdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTProdKeyPressed
          if (evt.getKeyCode() == evt.VK_SPACE) {
        jPopProdutos.removeAll();
        jLCod.setText("");
        pesquisaSelecionada(jTProd.getText());
            jTProd.add(jPopProdutos);
            jTProd.setComponentPopupMenu(jPopProdutos);
            try {
                int dotPosition = jTProd.getCaretPosition();
                Rectangle popupLocation = jTProd.modelToView(dotPosition);
                jPopProdutos.show(jTProd, popupLocation.x, popupLocation.y+30);
                jTProd.setFocusable(true);
            } catch (BadLocationException badLocationException) {
                System.out.println("Oops");
            }
          }        



        // TODO add your handling code here:
    }//GEN-LAST:event_jTProdKeyPressed

    private void jTQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTQuantidadeKeyPressed
 if (evt.getKeyCode() == evt.VK_SPACE) {
  float total = Float.parseFloat(jTQuantidade.getText())*Float.parseFloat(jTVUnidade.getText());
 //joga o valor total do produto
     jTTotal.setText(String.valueOf(total));      
 }// TODO add your handling code here:
    }//GEN-LAST:event_jTQuantidadeKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
adicionaProduto();
limpaProdutos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTClienteKeyPressed
if (evt.getKeyCode() == evt.VK_SPACE) {
    jPopupCliente.removeAll();
        
        pesquisaSelecionadaCliente(jTCliente.getText());
            jTCliente.add(jPopupCliente);
            jTCliente.setComponentPopupMenu(jPopupCliente);
            try {
                int dotPosition = jTCliente.getCaretPosition();
                Rectangle popupLocation = jTCliente.modelToView(dotPosition);
                jPopupCliente.show(jTCliente, popupLocation.x, popupLocation.y+30);
                jTCliente.setFocusable(true);
            } catch (BadLocationException badLocationException) {
                System.out.println("Oops");
            }   
 }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTClienteKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
if(jTCliente.getText().equalsIgnoreCase("")){
    JOptionPane.showMessageDialog(rootPane,"Campo Cliente em Branco.");
}else{
    int i = jTable1.getRowCount();
     if(i==0){
       JOptionPane.showMessageDialog(rootPane,"Lista Sem Produtos.");
    }else{
        criaVenda();
        vender();      
    }
}  // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("APRAZO")){
            jCParcelas.setEnabled(true);
            jTValorParcelas.setEnabled(true);
            jTValorEntrada.setEnabled(true);
            this.pg = 1;
        }else{
            jCParcelas.setEnabled(false);
            jTValorParcelas.setEnabled(false);
            jTValorEntrada.setEnabled(false);
            this.pg = 0;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jCParcelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCParcelasActionPerformed
        float valorEntrada = 0;
        int quant = Integer.parseInt(jCParcelas.getSelectedItem().toString());
        float valor = Float.parseFloat(jTVTotalVenda.getText());
       
        
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("APRAZO")){
            if(jTValorEntrada.getText().equalsIgnoreCase("")){
                jTValorParcelas.setText(String.valueOf(valor/quant));
            }else{
                 valorEntrada = Float.parseFloat(jTValorEntrada.getText());
                jTValorParcelas.setText(String.valueOf((valor-valorEntrada)/quant));

            }
        }else{
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jCParcelasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoVend.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoVend.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoVend.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoVend.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GerenciamentoVend dialog = new GerenciamentoVend(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel estoqueSaida;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jCParcelas;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLCod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLidCliente;
    private javax.swing.JLabel jLidEstoque;
    private javax.swing.JPopupMenu jPopProdutos;
    private javax.swing.JPopupMenu jPopupCliente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTCliente;
    private javax.swing.JTextField jTProd;
    private javax.swing.JTextField jTQuantidade;
    private javax.swing.JTextField jTTotal;
    private javax.swing.JTextField jTVTotalVenda;
    private javax.swing.JTextField jTVUnidade;
    private javax.swing.JTextField jTValorEntrada;
    private javax.swing.JTextField jTValorParcelas;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel saidaspinel;
    // End of variables declaration//GEN-END:variables

  
    //canpo que joga os dados do produto na lista
    private void pesquisaSelecionada(String text) {
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        int i = 1;
      
        Criteria crit = sesion.createCriteria(br.com.barbara.Classes.Produtos.class);
        crit.add(Restrictions.like("descricao",text+"%"));
        java.util.List results = crit.list();
       
       for (Iterator iterator = results.iterator(); iterator.hasNext();){
        br.com.barbara.Classes.Produtos Sal = (br.com.barbara.Classes.Produtos) iterator.next(); 
           int ifValidacao = 0;//pulo do gato me permiter verificar os valores se tem o id no estoque e no produto
        //---------------------------- aqui verifica isso atraves de uma pesquisa na classe estoque
                Criteria crit2 = sesion.createCriteria(br.com.barbara.Classes.Estoque.class);
                java.util.List results2 = crit2.list();
                for (Iterator iterator2 = results2.iterator(); iterator2.hasNext();){
                 br.com.barbara.Classes.Estoque s = (br.com.barbara.Classes.Estoque) iterator2.next();
                    if(Sal.getIdProduto()==s.getIdProduto()){
                        ifValidacao = 1;//se os ids de produto em ambas as tabelas fores iguais então 
                        // valor de validacao recebe 1
                    }
                }
            //----------------------------se o valor de validacao for um o produto vai para o popup menu
        if(ifValidacao == 1){
          JMenuItem item = new JMenuItem(Sal.getDescricao()+","+Sal.getIdProduto());
          item.addActionListener(new ActionListener() {
           @Override
            public void actionPerformed(ActionEvent arg0){
             String mods = item.getText();
             String campos[] = mods.split(",");
            
             jTProd.setText(campos[0]);
             jLCod.setText(campos[1]);
             int pega = Integer.parseInt(campos[1]);
             pegaEstoque(pega);
             
            //seto os valores granvando o valor original do banco para o uptade  
            descricao=  campos[0];  
            idProduto = Integer.parseInt(campos[1]);
    
           }       

            
 });
          jPopProdutos.add(item);
        }
       }
        

        
}
private void pegaEstoque(int pega) {
                Session sesion = HibernateUtil.getSessionFactory().openSession();
                Transaction tx = null;
                Criteria crit2 = sesion.createCriteria(br.com.barbara.Classes.Estoque.class);
                java.util.List results2 = crit2.list();
                for (Iterator iterator2 = results2.iterator(); iterator2.hasNext();){
                br.com.barbara.Classes.Estoque Sal2 = (br.com.barbara.Classes.Estoque) iterator2.next(); 
                if(pega == Sal2.getIdProduto()){
                if(Sal2.getQuantVenda()>0){
                    jTVUnidade.setText(String.valueOf(Sal2.getVenda()));
                    estoqueSaida.setText(String.valueOf(Sal2.getQuantVenda()));
                    jLidEstoque.setText(String.valueOf(Sal2.getIdEstoque())); 
                    
                     //seto os valores granvando o valor original do banco para o uptade                          
                    valorVenda = Sal2.getVenda();
                    quantidadeEstoque = Sal2.getQuantVenda();
                    
                   }else{JOptionPane.showMessageDialog(rootPane, "PRODUTO INDISPONIVEL NO ESTOQUE"); }
                }
                }
            }
    private void adicionaProduto() {
         tmResultSet.addRow(new Object[]{
            //`enter code here`columns
            jLCod.getText(),
            jTProd.getText(),
            jTQuantidade.getText(),
            jTVUnidade.getText(),
            jTTotal.getText(),
            estoqueSaida.getText(),
            jLidEstoque.getText()
            
        });
        if(jTVTotalVenda.getText().equalsIgnoreCase("")){
         jTVTotalVenda.setText(jTTotal.getText());
        }else{
         vendaTotal = Float.parseFloat(jTVTotalVenda.getText())+Float.parseFloat(jTTotal.getText());
         jTVTotalVenda.setText(String.valueOf(vendaTotal)); 
        }
    }

    private void pesquisaSelecionadaCliente(String text) {
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        Criteria crit = sesion.createCriteria(Clientes.class);
        crit.add(Restrictions.like("nome",text+"%"));
        java.util.List results = crit.list();
        for (Iterator iterator = results.iterator(); iterator.hasNext();){
        Clientes Sal = (Clientes) iterator.next();  
        
        
        JMenuItem item = new JMenuItem(Sal.getIdCliente()+","+Sal.getNome());
          item.addActionListener(new ActionListener() {
           @Override
            public void actionPerformed(ActionEvent arg0){
             String mods = item.getText();
             String campos[] = mods.split(",");
          
             jTCliente.setText(campos[1]);
             jLidCliente.setText(campos[0]);
          
         
           }});
          jPopupCliente.add(item);
             }
         }

    private void limpaProdutos() {
    jTProd.setText("");jLCod.setText("");jTQuantidade.setText("");jTTotal.setText("");jTVUnidade.setText("");
    }
    private void limpaCliente(){
    jTCliente.setText("");jLidCliente.setText("");
    }
    private void limpaTabela(){
        tabela = (DefaultTableModel)jTable1.getModel();
        tabela.setNumRows(0);        
    }
//aqui vende o produto
    private void vender() {
       
       int i = jTable1.getRowCount();
       int x = jTable1.getColumnCount();
        for (int j = 0; j < i; j++) {
           /* System.out.println( jTable1.getModel().getValueAt(j,0));
            System.out.println( jTable1.getModel().getValueAt(j,1));
            System.out.println( jTable1.getModel().getValueAt(j,2));
            System.out.println( jTable1.getModel().getValueAt(j,3));
            System.out.println( jTable1.getModel().getValueAt(j,4));
        */
            //abre a instancia da classe de saida
        Saidas saidas = new Saidas();
        //pego os valores da tabela onde esta os produtos
         idPTable =  Integer.parseInt(jTable1.getModel().getValueAt(j,0).toString());
         Produto = (String) jTable1.getModel().getValueAt(j,1).toString();
         Quantidade = Float.parseFloat(jTable1.getModel().getValueAt(j,2).toString());
         valorUnit = Float.parseFloat(jTable1.getModel().getValueAt(j,3).toString());
         totalProduto = Float.parseFloat(jTable1.getModel().getValueAt(j,4).toString());
         Qestoque = Float.parseFloat(jTable1.getModel().getValueAt(j,5).toString());
         idCliente = Integer.parseInt(jLidCliente.getText());
         pagamento = jComboBox1.getSelectedItem().toString();
         valorTotal =  Float.parseFloat(jTVTotalVenda.getText());
         idEstoque = Integer.parseInt(jTable1.getModel().getValueAt(j,6).toString());
        //faço um salvar na tabela saida, já com os valores alterados
        saidas.setIdProduto(idPTable);
        saidas.setIdCliente(idCliente);
        saidas.setQuantidade(Quantidade);
        saidas.setObservacao(Produto);
        saidas.setPreco(valorUnit);
        saidas.setPagamento(pagamento);
        saidas.setPg(pg);
        saidas.setNumvenda(this.numeroVenda);
        Date date = new Date();
	saidas.setData(String.valueOf(date.getTime()));
        //Session s = HibernateUtil.getSessionFactory().getCurrentSession();
        Session s = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        s.beginTransaction();
        s.save(saidas);
        s.getTransaction().commit();
        JOptionPane.showMessageDialog(rootPane, "VENDA REALIZADA COM SUCESSO!");
            SaidaDEstoque(Quantidade, idPTable, Qestoque, idEstoque);
      if(jComboBox1.getSelectedItem().equals("APRAZO")){
          
          float vlEntrada = 0;
       if(jTValorEntrada.getText().equalsIgnoreCase("")){
            vlEntrada = 0;
       }else{
            vlEntrada = Float.parseFloat(jTValorEntrada.getText());
       }
          
          controleParcela(idCliente, valorTotal, vlEntrada, jCParcelas.getSelectedItem().toString(),this.numeroVenda);
          this.numparc = Integer.parseInt(jCParcelas.getSelectedItem().toString());
          this.numparc2 = Integer.parseInt(jCParcelas.getSelectedItem().toString());
         
        }
        /*
        entradas.setIdProduto(Integer.parseInt(jLCod.getText()));
        entradas.setQuantidade(Float.parseFloat(jTQuant.getText()));
        entradas.setQuantCaixa(Float.parseFloat(jTQuantCX.getText()));
        entradas.setQuantVenda(Float.parseFloat(jTQuantVenda.getText()));
        entradas.setCusto(Float.parseFloat(jTCusto.getText()));
        entradas.setPorcentagem(Float.parseFloat(jTPorc.getText()));
        entradas.setVenda(Float.parseFloat(jTVVenda.getText()));
       

            /* for (int j2 = 0; j2 <= x; j2++) {
                
                System.out.println(j+""+j2);
        }*/
        }
         while(numparc>0){
          parcela(this.numeroVenda, idCliente, numparc, (valorTotal/numparc2), 0);
          numparc=numparc-1;
         }
//chama o limpa campos
       limpaCampos();
      
    }

    private void limpaCampos() {
        jTProd.setText("");
        jTCliente.setText("");
        jTQuantidade.setText("");
        jTTotal.setText("");
        jTVTotalVenda.setText("");
        jTVUnidade.setText("");
        jLCod.setText("");
        jLidCliente.setText("");
        jLidEstoque.setText("");
        tabela = (DefaultTableModel)jTable1.getModel();
        tabela.setNumRows(0);
        jTValorEntrada.setText("");
        jTValorParcelas.setText("");
        jCParcelas.setSelectedItem(0);
    }
         //faz um update na tabela estoque
    public void SaidaDEstoque(float quantidade, int idProduto, float Qestoque, int idEstoque){
      float quant= 0;
      float quantCaixa= 0;
      float quantVenda = 0;
      float custo= 0;
      float porcentagem= 0;
      float venda= 0;
        //pego os valores que estao no estoque
         Session sesion = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        Criteria crit2 = sesion.createCriteria(br.com.barbara.Classes.Estoque.class);
        java.util.List results2 = crit2.list();
        for (Iterator iterator2 = results2.iterator(); iterator2.hasNext();){
        br.com.barbara.Classes.Estoque s = (br.com.barbara.Classes.Estoque) iterator2.next(); 
        //se os ids tanto do estoque bem como o que está sendo alterado são == entao
        //passa os valores para as variaveis de alteracao
            if(s.getIdProduto() == idProduto){
             quant = s.getQuantidade();
             quantCaixa = s.getQuantCaixa();
             quantVenda = s.getQuantVenda();
             custo = s.getCusto();
             porcentagem = s.getPorcentagem();
             venda = s.getVenda();
             
            }
        
        }
        // aqui faz o update com os novos valores
       Estoque estoque = new Estoque();
       estoque.setIdEstoque(idEstoque);
       estoque.setIdProduto(idProduto);
       estoque.setQuantVenda(quantVenda-quantidade); // quantidade antiga menos venda = nova quantidade.
       estoque.setQuantidade(quant);
       estoque.setQuantCaixa(quantCaixa);
       estoque.setCusto(custo);
       estoque.setPorcentagem(porcentagem);
       estoque.setVenda(venda);
        Session ss = HibernateUtil.getSessionFactory().openSession();
        ss.beginTransaction();
        ss.update(estoque);
        ss.getTransaction().commit();
      //  JOptionPane.showMessageDialog(rootPane, "VENDA REALIZADA COM SUCESSO!");
      //  limpaCampos();
    }
    
    public void parcela(int numVenda, int idCliente, int numparcela, float valorParcela, int pg){
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        Parcela parc = new Parcela();
        parc.setNumvenda(numVenda);
        parc.setIdcliente(idCliente);
        parc.setNumparcela(numparcela);
        parc.setValorparcela(valorParcela);
        parc.setPago(pg);
        sesion.beginTransaction();
        sesion.save(parc);
        sesion.getTransaction().commit();
        //System.out.println("deu certo");
    }
    public void controleParcela(int idCliente, float valorTotal,float vlEntrada1, String quantidadeParcela, int Controle){
               int quantParc = Integer.parseInt(quantidadeParcela);
               
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        Controleparcela ctlparcela = new Controleparcela();
        ctlparcela.setIdcliente(idCliente);
        ctlparcela.setVltotal(valorTotal);
        ctlparcela.setVlentrada(vlEntrada1);
        ctlparcela.setQuantParcela(quantParc);
        ctlparcela.setControle(Controle);
        sesion.beginTransaction();
        sesion.save(ctlparcela);
        sesion.getTransaction().commit();
        //System.out.println("deu certo");
    }
    ///este cria a venda, é tipo criar o numero da nfe
    private void criaVenda() {
        int idCliente = Integer.parseInt(jLidCliente.getText());
        Date x=new Date();
        this.dataComparacao = x.toString();
        System.out.println(x);
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        Recibovenda recibovenda = new Recibovenda();
        recibovenda.setIdcliente(idCliente);
        recibovenda.setDatavenda(x.toString());
        sesion.beginTransaction();
        sesion.save(recibovenda);
        sesion.getTransaction().commit();
        
        pegaIdVenda();
    }
    // aqui pega o id da venda para passar para a variavel para jogar no
    // banco ligando a tabela de saida com a de venda e com a parcela.
    private void pegaIdVenda(){
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        Transaction tx = null;
        Criteria criteria = sesion.createCriteria(br.com.barbara.Classes.Recibovenda.class);
       // Criteria crit = sesion.createCriteria(Clientes.class);
        criteria.add(Restrictions.like("datavenda",this.dataComparacao+"%"));
         java.util.List results2 = criteria.list();
        for (Iterator iterator2 = results2.iterator(); iterator2.hasNext();){
        br.com.barbara.Classes.Recibovenda s = (br.com.barbara.Classes.Recibovenda) iterator2.next();
        this.numeroVenda = s.getIdvenda();
        System.out.println(String.valueOf("Numero da Venda:"+s.getIdvenda()));
        
        // isso aqui pode n dar certo criteria.addOrder(Order.desc(idvenda));
    // o mais correto e rapido, é utilizar o texto da data criando uma variavel que salva
    //temporariamente.
        }
        }
    
}

    

